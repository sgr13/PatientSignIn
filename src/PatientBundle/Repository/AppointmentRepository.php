<?php

namespace PatientBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * AppointmentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AppointmentRepository extends EntityRepository
{
    public function getDay($year, $month, $day)
    {
        $q = $this->createQueryBuilder('v');

        $q->select('v')
            ->where('v.year = :year', 'v.month = :month', 'v.day = :day')
            ->setParameter('year', $year)
            ->setParameter('month', $month)
            ->setParameter('day', $day);

        return $q->getQuery()->getResult();
    }

    public function getVisitsByMonth($year, $month, $day)
    {
        $q = $this->createQueryBuilder('v');

        $q->select('v')
            ->where('v.year = :year', 'v.month = :month', 'v.day = :day')
            ->setParameter('year', $year)
            ->setParameter('month', $month)
            ->setParameter('day', $day)
            ->orderBy('v.hour', 'ASC');

        return $q->getQuery()->getResult();
    }

    public function getVisits($year, $month, $days)
    {
        $q = $this->createQueryBuilder('v');

        $q->select('v')
            ->where('v.year = :year', 'v.month = :month')
            ->setParameter('year', $year)
            ->setParameter('month', $month)
            ->orderBy('v.day', 'ASC');

        $visits = $q->getQuery()->getResult();

        foreach ($visits as $visit) {
            if (!in_array($visit->getDay(), $days)) {
                $days[] = $visit->getDay();
            }
        }

        return $days;
    }

    public function getVisitByHour($year, $month, $day, $hour)
    {
        $q = $this->createQueryBuilder('v');

        $q->select('v')
            ->where('v.year = :year', 'v.month = :month', 'v.day = :day', 'v.hour = :hour')
            ->setParameter('year', $year)
            ->setParameter('month', $month)
            ->setParameter('day', $day)
            ->setParameter('hour', $hour);

        return $q->getQuery()->getOneOrNullResult();
    }

    public function getChangedDigit($number)
    {
        $number = str_split($number);
        if ($number[0] == 0) {
            $number[0] = '';
        }
        $number = implode('', $number);

        return $number;
    }

    public function getVisitTypes($year, $month, $day)
    {
        $daySchedule = self::getDay($year, $month, $day);

        $diabArray = [];
        $dietArray = [];

        foreach ($daySchedule as $value) {
            if ($value->getVisitType() == 'diab') {
                $diabArray[] = $value->getHour();
            } else {
                $dietArray[] = $value->getHour();
            }
        }
        $visits = [$diabArray, $dietArray];
        return $visits;
    }

    public function sendMail($day, $month, $year, $hour, $surname, $name, $phone, $visitType, $messageType)
    {
        mail('s.g.jarzabek@gmail.com',
            $messageType,
            'Data:' . $day . '/' . $month . '/' . $year . '|' .
            'Godzina: ' . $hour . ' | ' .
            'Pacjent: ' . $surname . ' ' . $name . ' | ' .
            'Telefon: ' . $phone . ' | ' .
            'Wizyta: ' . $visitType
        );
    }
}
